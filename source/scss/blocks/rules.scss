@mixin rulesAnimationDelayFunc($length) {
  @for $item from 0 to $length {
    .rules__item:nth-child(#{$item + 1}) {
      &::before {
        animation-delay: $item * 0.3s + 0.3s, $item * 0.3s;
      }

      p {
        animation-delay: ($item + 1) * 0.2s;
      }
    }
  }
}

@mixin changeColorAnim($name, $to, $from: transparent, $settingsAndOtherAnims...) {
  @keyframes #{$name} {
    0% {
      color: $from;
    }

    100% {
      color: $to;
    }
  }

  @if $settingsAndOtherAnims {
    animation: #{$name} $settingsAndOtherAnims;
  } @else {
    animation: #{$name};
  }
}

.rules {
  position: relative;
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  padding: 14.6rem 0 13rem;
  width: 100%;

  @media (min-width: $stop-scaling) {
    padding: 146px 0 65px;
  }

  @media (max-width: $tablet) and (orientation: portrait) {
    padding: 5.9rem 0 8rem;
  }

  @media (max-width: $tablet) and (orientation: landscape) {
    padding: 7rem 0 8rem;
  }

  @media (max-width: $mobile) and (orientation: landscape) {
    padding: 4rem 0 4rem;
  }
}

.rules__title {
  margin: 0 0 5rem;
  text-transform: uppercase;
  font-family: $font-alt;
  font-weight: 400;
  font-size: 4.8rem;
  line-height: 0.906;
  letter-spacing: -0.04em;

  @media (min-width: $stop-scaling) {
    margin-bottom: 50px;
    font-size: 48px;
  }

  @media (max-width: $tablet) and (orientation: portrait) {
    margin-bottom: 1.8rem;
    font-size: 3.6rem;
  }

  @media (max-width: $tablet) and (orientation: landscape) {
    font-size: 3rem;
    margin-bottom: 2rem;
  }

  @media (max-width: $mobile) and (orientation: landscape) {
    font-size: 2rem;
    margin-bottom: 1rem;
  }
}

.rules__lead {
  margin-left: 5.8rem;
  max-width: 96rem;
  text-transform: uppercase;
  font-size: 2.4rem;
  line-height: 1.2;

  @media (min-width: $stop-scaling) {
    margin-left: 58px;
    max-width: 960px;
    font-size: 24px;
  }

  @media (max-width: $tablet) and (orientation: portrait) {
    margin-left: 2.5rem;
    padding-right: 1rem;
    font-size: 1.6rem;
  }

  @media (max-width: $tablet) and (orientation: landscape) {
    margin-left: 2rem;
    font-size: 2rem;
  }

  @media (max-width: $mobile) and (orientation: landscape) {
    max-width: 100%;
    font-size: 1.4rem;
  }

  p {
    margin: 0;
  }
}

.rules__list {
  @include list-reset;
  counter-reset: li;
  column-count: 2;
  column-gap: 9.6rem;
  margin: auto;
  padding-top: 7rem;
  max-width: 69.6rem;
  @include rulesAnimationDelayFunc(4);

  @media (min-width: $stop-scaling) {
    column-gap: 96px;
    padding-top: 70px;
    max-width: 696px;
  }

  @media (max-width: $tablet) and (orientation: portrait) {
    column-count: auto;
    column-gap: 0;
    padding: 0 2.5rem;
  }

  @media (max-width: $tablet) and (orientation: landscape) {
    padding-top: 0;
  }

  @media (max-width: $mobile) and (orientation: landscape) {
    column-gap: 4rem;
  }
}

.rules__item {
  position: relative;
  margin: 0 0 6.2rem;
  padding-top: 0.6rem;
  padding-left: 6.5rem;
  break-inside: avoid;

  @media (min-width: $stop-scaling) {
    margin: 0 0 62px;
    padding-top: 6px;
    min-height: 5rem;
  }

  @media (max-width: $tablet) and (orientation: portrait) {
    margin-bottom: 1rem;
    padding-left: 5rem;
  }

  @media (max-width: $tablet) and (orientation: landscape) {
    margin-bottom: 2rem;
  }

  @media (max-width: $mobile) and (orientation: landscape) {
    padding-left: 5rem;
    font-size: 1.2rem;
  }

  &::before {
    content: counter(li);
    counter-increment: li;
    position: absolute;
    top: 0;
    left: 0;
    width: 4.5rem;
    height: 4.5rem;
    font-family: $font-alt;
    font-weight: 400;
    font-size: 2.4rem;
    color: $c-light;
    background-color: $c-purple;
    border-radius: 50%;
    line-height: 5rem;
    text-align: center;
    @include changeColorAnim(changeRulesItemColor, $c-light, transparent, $anim-duration-short ease both, changeRulesItemIndexSize $anim-duration-middle cubic-bezier(0.25, 0.1, 0.71, 1.76) both);

    @media (prefers-reduced-motion: reduce) {
      animation: none;
    }

    @media (max-width: $tablet) and (orientation: portrait) {
      top: 1rem;
      width: 2.5rem;
      height: 2.5rem;
      line-height: 3rem;
      font-size: 1.4rem;
    }

    @media (max-width: $mobile) and (orientation: landscape) {
      top: 0.6rem;
      width: 2.5rem;
      height: 2.5rem;
      line-height: 3rem;
      font-size: 1.4rem;
    }
  }

  p {
    margin: 0;
    animation: rulesTextFadeIn $anim-duration-long ease both;

    @media (prefers-reduced-motion: reduce) {
      animation: none;
    }

    @media (max-width: $tablet) and (orientation: portrait) {
      min-height: calc(1.4rem * 2.2);
    }
  }
}

.rules__btn-box {
  font-size: 2.4rem;
  position: absolute;
  display: flex;
  align-items: center;
  bottom: 6rem;
  right: 5.6rem;
  overflow: hidden;
  border-radius: 3.5rem;

  @media (min-width: $stop-scaling) {
    font-size: 24px;
    bottom: 60px;
    right: 56px;
  }

  @media (max-width: $tablet) and (orientation: portrait) {
    font-size: 1.8rem;
    left: 0;
    right: 0;
    bottom: 4rem;
    width: 100%;
  }

  @media (max-width: $tablet) and (orientation: landscape) {
    bottom: 5rem;
  }

  @media (max-width: $mobile) and (orientation: landscape) {
    font-size: 1.8rem;
    bottom: 2rem;
    right: 1.5rem;
  }
}

.rules__link {
  @include changeColorAnim(changeRulesBtnColor, $c-dark, transparent, $anim-duration-short ease 1.5s both, rulesBtnFadeIn $anim-duration-short 1.25s ease both);

  @media (prefers-reduced-motion: reduce) {
    animation: none;
  }

  @media (max-width: $tablet) and (orientation: portrait) {
    width: 100%;
  }
}

@keyframes changeRulesItemIndexSize {
  0% {
    transform: scale(0);
  }

  100% {
    transform: scale(1);
  }
}

@keyframes rulesTextFadeIn {
  0% {
    opacity: 0;
    transform: translateX(3rem);
  }

  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes rulesBtnFadeIn {
  0% {
    opacity: 0;
    transform: translateX(calc(100% - 5rem));
  }

  1% {
    opacity: 1;
    transform: translateX(calc(100% - 5rem));
  }

  100% {
    transform: translateX(0);
  }
}
